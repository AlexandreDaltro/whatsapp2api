"use strict"

//Code protected by Copyright
//Creator: Alexandre de Almeida Daltro
//Contact: contato@alexandredaltro.com.br

const divTable=document.querySelector("div.table"),divButtonAddNewInput=document.querySelector("button#add_input"),buttonSave=document.querySelector("button#button_save"),inputDataToSave=new Object,inputUrlToPost=document.querySelector("input#webhook_link");let tableRowIndex,savedData=new Object,buttonRemoveRow=new Array;function setListeners(){divButtonAddNewInput?.addEventListener("click",addNewInput),buttonSave?.addEventListener("click",savesDataAndSendsToTab)}function getsDataFromChromeStorage(){chrome.storage.sync.get(["alldata"],(e=>{for(let t in savedData=e.alldata,inputUrlToPost.setAttribute("value",savedData.urlToPost),tableRowIndex=savedData.rowIndex?savedData.rowIndex:0,savedData.rows){let e=savedData.rows[t].key,o=savedData.rows[t].label,n=savedData.rows[t].id,a=savedData.rows[t].type,d="",i="",u="",l="";"text"===a&&(d="selected"),"number"===a&&(i="selected"),"tel"===a&&(u="selected"),"url"===a&&(l="selected");let r=`<div id="row_${e}" data-key="${e}" class="row">\n            <div><input id="data_label_${e}" type="text" value="${o}"></div>\n            <div><input id="data_id_${e}" type="text" value="${n}"></div>\n            <div><select id="data_type_${e}">\n            <option value="text" ${d}>Text</option>\n            <option value="number" ${i}>Number</option>\n            <option value="tel" ${u}>Phone</option>\n            <option value="url" ${l}>URL</option>\n            </select></div>\n            <div><button id="remove_input" value="${e}" class="remove_input_button_${e}">-</button></div>\n            </div>`;divTable.insertAdjacentHTML("beforeend",r),buttonRemoveRow[[e]]=document.querySelector(`button.remove_input_button_${e}`),buttonRemoveRow[e].addEventListener("click",removeInputRow.bind(this,buttonRemoveRow[e].value))}}))}function queryCurrentTab(){chrome.tabs.query({currentWindow:!0,active:!0},(function(e){var t=e[0];chrome.tabs.sendMessage(t.id,{command:"initReading"})}))}function savesDataToChromeStorage(e){chrome.storage.sync.set({alldata:e},(()=>{}))}function addNewInput(){tableRowIndex++;let e=`<div id="row_${tableRowIndex}" data-key="${tableRowIndex}" class="row">\n    <div><input id="data_label_${tableRowIndex}" type="text"></div>\n    <div><input id="data_id_${tableRowIndex}" type="text"></div>\n    <div><select id="data_type_${tableRowIndex}">\n        <option value="text">Text</option>\n        <option value="number">Number</option>\n        <option value="tel">Phone</option>\n        <option value="url">URL</option>\n      </select></div>\n      <div><button id="remove_input" value="${tableRowIndex}" class="remove_input_button_${tableRowIndex}">-</button></div>\n        </div>`;divTable.insertAdjacentHTML("beforeend",e),buttonRemoveRow[[tableRowIndex]]=document.querySelector(`button.remove_input_button_${tableRowIndex}`),buttonRemoveRow[tableRowIndex].addEventListener("click",removeInputRow.bind(this,buttonRemoveRow[tableRowIndex].value))}function removeInputRow(e){document.querySelector(`#row_${e}`).remove()}function savesDataAndSendsToTab(){let e,t=document.querySelectorAll("div.row"),o=document.querySelector("input#webhook_link");inputDataToSave.rowIndex=tableRowIndex,inputDataToSave.urlToPost=o.value,inputDataToSave.rows={},t.forEach((t=>{e=document.querySelectorAll(`div#${t.id} > div > input, div#${t.id} > div > select`),inputDataToSave.rows[[t.id]]={key:t.dataset.key,label:e[0].value,id:e[1].value,type:e[2].value}})),savesDataToChromeStorage(inputDataToSave)}window.addEventListener("DOMContentLoaded",setListeners),window.addEventListener("DOMContentLoaded",getsDataFromChromeStorage);